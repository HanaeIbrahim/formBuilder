function e(e,t){if(t.has(e))throw TypeError("Cannot initialize the same private elements twice on an object")}function t(e,t){var n=function(e,t,n){if(!t.has(e))throw TypeError("attempted to get private field on non-instance");return t.get(e)}(e,t,0);return n.get?n.get.call(e):n.value}function n(t,n,a){e(t,n),n.set(t,a)}var a=new WeakMap,i=new WeakMap,r=new WeakSet;function s(e){e.preventDefault();let n=t(this,a).map(e=>({[e.name]:e.value})),i=document.querySelector("#toast");return i.classList.add("show"),i.textContent=n.map(e=>JSON.stringify(e)),setTimeout(()=>{i.classList.remove("show")},5e3),n}var o=new WeakMap;class l{render(){let e=document.createElement("div");e.classList.add("field-container");let n=document.createElement("label");return n.innerText=this.label,t(this,o).name=this.name,t(this,o).type=this.type,e.append(n),e.append(t(this,o)),e}get value(){return t(this,o).value}constructor(e){n(this,o,{writable:!0,value:document.createElement("input")}),this.name=e.name,this.type=e.type,this.label=e.label}}const d=new class{addField(e){if(!(e instanceof l))throw Error("You tried to add something that is not a field");return t(this,a).push(e),console.log(`Added field ${e.name} to form`),this}render(){let e=document.createElement("h1");e.textContent=this.title,t(this,i).append(e),t(this,a).forEach(e=>{let n=e.render();t(this,i).append(n)});let n=document.createElement("button");n.type="submit",n.textContent="Submit",t(this,i).append(n),t(this,i).addEventListener("submit",(function(e,t,n){if(!t.has(e))throw TypeError("attempted to get private field on non-instance");return n})(this,r,s).bind(this)),document.body.append(t(this,i))}constructor(t){e(this,r),r.add(this),n(this,a,{writable:!0,value:[]}),n(this,i,{writable:!0,value:document.createElement("form")}),this.title=t}}("Signup"),h=new l({name:"email",type:"email",label:"email"}),u=new l({name:"password",type:"password",label:"password"});d.addField(h).addField(u).render();
//# sourceMappingURL=index.b45ef662.js.map
